import React, { useState } from 'react';
import pdfjs from 'pdfjs-dist';

function BinaryFileToPDFComponent() {
  const [pdfUrl, setPdfUrl] = useState('');

  const handleConvertToPDF = (binaryData) => {
    pdfjs.GlobalWorkerOptions.workerSrc = //cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js;

    const loadingTask = pdfjs.getDocument({ data: binaryData });
    loadingTask.promise.then(pdf => {
      pdf.getPage(1).then(page => {
        const viewport = page.getViewport({ scale: 1.5 });
        const canvas = document.createElement('canvas');
        const context = canvas.getContext('2d');
        canvas.height = viewport.height;
        canvas.width = viewport.width;

        const renderContext = {
          canvasContext: context,
          viewport: viewport
        };

        page.render(renderContext).promise.then(() => {
          const pdfAsDataUri = canvas.toDataURL('image/png');
          setPdfUrl(pdfAsDataUri);
        });
      });
    });
  };

  const handleDownloadPDF = () => {
    // Здесь вы можете добавить логику для скачивания PDF файла
  };

  // Здесь вы можете добавить логику для загрузки бинарного файла с сервера

  return (
    <div>
      <h2>Преобразование бинарного файла в PDF</h2>
      {/* Кнопка для загрузки бинарного файла */}
      {/* Кнопка для преобразования в PDF */}
      {pdfUrl && <img src={pdfUrl} alt="PDF страница" />}
      {pdfUrl && <button onClick={handleDownloadPDF}>Скачать PDF</button>}
    </div>
  );
}

export default BinaryFileToPDFComponent;

